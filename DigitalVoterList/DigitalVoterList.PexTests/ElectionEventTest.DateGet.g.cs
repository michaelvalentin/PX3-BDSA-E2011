// <copyright file="ElectionEventTest.DateGet.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace DigitalVoterList.Election
{
    public partial class ElectionEventTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ElectionEventTest))]
public void DateGet75()
{
    DateTime dt;
    ElectionEvent s0 = new ElectionEvent(default(DateTime), (string)null);
    dt = this.DateGet(s0);
    Assert.AreEqual<int>(1, dt.Day);
    Assert.AreEqual<DayOfWeek>(DayOfWeek.Monday, dt.DayOfWeek);
    Assert.AreEqual<int>(1, dt.DayOfYear);
    Assert.AreEqual<int>(0, dt.Hour);
    Assert.AreEqual<DateTimeKind>(DateTimeKind.Unspecified, dt.Kind);
    Assert.AreEqual<int>(0, dt.Millisecond);
    Assert.AreEqual<int>(0, dt.Minute);
    Assert.AreEqual<int>(1, dt.Month);
    Assert.AreEqual<int>(0, dt.Second);
    Assert.AreEqual<int>(1, dt.Year);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<int>(1, s0.Date.Day);
    Assert.AreEqual<DayOfWeek>(DayOfWeek.Monday, s0.Date.DayOfWeek);
    Assert.AreEqual<int>(1, s0.Date.DayOfYear);
    Assert.AreEqual<int>(0, s0.Date.Hour);
    Assert.AreEqual<DateTimeKind>(DateTimeKind.Unspecified, s0.Date.Kind);
    Assert.AreEqual<int>(0, s0.Date.Millisecond);
    Assert.AreEqual<int>(0, s0.Date.Minute);
    Assert.AreEqual<int>(1, s0.Date.Month);
    Assert.AreEqual<int>(0, s0.Date.Second);
    Assert.AreEqual<int>(1, s0.Date.Year);
    Assert.AreEqual<string>((string)null, s0.Name);
}
    }
}
