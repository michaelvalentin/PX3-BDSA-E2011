// <assemblyHash>c81c51f1</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias dvl;
extern alias mmf;
extern alias pc;
extern alias pf;
extern alias sx;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("DigitalVoterList")]
[assembly: global::System.Reflection.AssemblyCompany("")]
[assembly: global::System.Reflection.AssemblyConfiguration("")]
[assembly: global::System.Reflection.AssemblyFileVersion("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProduct("DigitalVoterList")]
[assembly: global::System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("DigitalVoterList.Explorables")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("DigitalVoterList.Tests")]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.AdministrationWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.AdministrationWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AdministrationWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAdministrationWindow
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.AdministrationWindow>
    {
        /// <summary>Initializes a new mole</summary>
        public MAdministrationWindow()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAdministrationWindow(dvl::DigitalVoterList.Views.AdministrationWindow instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.AdministrationWindow.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.AdministrationWindow> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.AdministrationWindow), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.AdministrationWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.AdministrationWindow, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.AdministrationWindow), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MAdministrationWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MAdministrationWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.AdministrationWindow), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, pc::System.Windows.Markup.IAddChild>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MAdministrationWindow Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.AdministrationWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MAdministrationWindow, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.AdministrationWindow.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.AdministrationWindow> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.AdministrationWindow), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.AdministrationWindow.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.AdministrationWindow>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.AdministrationWindow), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.AdministrationWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.AdministrationWindow, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.AdministrationWindow), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Utilities.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Utilities.Barcode"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Utilities.Barcode))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Barcode")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MBarcode
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Utilities.Barcode>
    {
        /// <summary>Initializes a new mole</summary>
        public MBarcode()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MBarcode(dvl::DigitalVoterList.Utilities.Barcode instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Barcode.Data"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Barcode, string> DataGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Data", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, "get_Data");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.GenerateBarcode(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Barcode, string, global::System.Drawing.Bitmap> GenerateBarcodeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateBarcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, "GenerateBarcode", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Barcode.Image"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Barcode, global::System.Drawing.Bitmap> ImageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Image", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, "get_Image");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.IsBarcodeReady(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Barcode, string, bool> IsBarcodeReadyString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsBarcodeReady", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, "IsBarcodeReady", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.ObjectInvariant"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Barcode> ObjectInvariant
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, "ObjectInvariant");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Utilities.Moles.MBarcode.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Utilities.Moles.MBarcode.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Utilities.Barcode), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Barcode, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Barcode), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Barcode.Data"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DataGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Data", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Barcode, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Utilities.Barcode), base.Instance, "get_Data");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.GenerateBarcode(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Drawing.Bitmap> GenerateBarcodeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateBarcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Utilities.Barcode, string, global::System.Drawing.Bitmap>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Barcode), base.Instance, "GenerateBarcode", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Barcode.Image"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Drawing.Bitmap> ImageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Image", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Barcode, global::System.Drawing.Bitmap>(value)
                                                                                                                ), typeof(dvl::DigitalVoterList.Utilities.Barcode), base.Instance, "get_Image");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.IsBarcodeReady(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsBarcodeReadyString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsBarcodeReady", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Barcode, string, bool>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Utilities.Barcode), base.Instance, "IsBarcodeReady", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Barcode.ObjectInvariant"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ObjectInvariant
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Barcode>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Barcode), base.Instance, "ObjectInvariant");
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.Citizen"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.Citizen))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Citizen")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MCitizen
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.Citizen>
    {
        /// <summary>Initializes a new mole</summary>
        public MCitizen()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MCitizen(dvl::DigitalVoterList.Election.Citizen instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.EligibleToVote"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, bool> EligibleToVoteGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "get_EligibleToVote");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.EligibleToVote"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, bool> EligibleToVoteSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_EligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "set_EligibleToVote", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.HasVoted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, bool> HasVotedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "get_HasVoted");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.HasVoted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, bool> HasVotedSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "set_HasVoted", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.ObjectInvariant"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> ObjectInvariant
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "ObjectInvariant");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.SecurityQuestions"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> SecurityQuestionsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "get_SecurityQuestions");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.SecurityQuestions"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> SecurityQuestionsSetHashSetOfQuiz
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), 
                         (object)null, "set_SecurityQuestions", typeof(global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.SetHasVoted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> SetHasVoted
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "SetHasVoted");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.ValidCpr(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, string, bool> ValidCprString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidCpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "ValidCpr", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VoterCards"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>> VoterCardsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_VoterCards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "get_VoterCards");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VoterCards"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>> VoterCardsSetHashSetOfVoterCard
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_VoterCards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), 
                         (object)null, "set_VoterCards", typeof(global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VotingPlace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> VotingPlaceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_VotingPlace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, "get_VotingPlace");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VotingPlace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> VotingPlaceSetVotingVenue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_VotingPlace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), 
                         (object)null, "set_VotingPlace", typeof(dvl::DigitalVoterList.Election.VotingVenue));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MCitizen.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MCitizen.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.Citizen), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.#ctor(System.Int32,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, int, string> ConstructorInt32String
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Citizen), (object)null, ".ctor", typeof(int), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.EligibleToVote"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> EligibleToVoteGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "get_EligibleToVote");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.EligibleToVote"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> EligibleToVoteSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_EligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "set_EligibleToVote", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.HasVoted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HasVotedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "get_HasVoted");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.HasVoted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> HasVotedSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "set_HasVoted", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.ObjectInvariant"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ObjectInvariant
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "ObjectInvariant");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.SecurityQuestions"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> SecurityQuestionsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>>
                                                   (value)), typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "get_SecurityQuestions");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.SecurityQuestions"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> SecurityQuestionsSetHashSetOfQuiz
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>>
                                                   (value)), typeof(dvl::DigitalVoterList.Election.Citizen), 
                     base.Instance, "set_SecurityQuestions", typeof(global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.SetHasVoted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetHasVoted
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "SetHasVoted");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Citizen.ValidCpr(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> ValidCprString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidCpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Citizen, string, bool>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "ValidCpr", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VoterCards"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>> VoterCardsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_VoterCards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>>(value)
                                              ), typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "get_VoterCards");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VoterCards"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>> VoterCardsSetHashSetOfVoterCard
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_VoterCards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <dvl::DigitalVoterList.Election.Citizen, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>>(value)
                                              ), typeof(dvl::DigitalVoterList.Election.Citizen), 
                     base.Instance, "set_VoterCards", typeof(global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VoterCard>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VotingPlace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue> VotingPlaceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_VotingPlace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "get_VotingPlace");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Citizen.VotingPlace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VotingVenue> VotingPlaceSetVotingVenue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_VotingPlace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Citizen), base.Instance, "set_VotingPlace", typeof(dvl::DigitalVoterList.Election.VotingVenue));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.ContentController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.ContentController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ContentController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MContentController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.ContentController>
    {
        /// <summary>Initializes a new mole</summary>
        public MContentController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MContentController(dvl::DigitalVoterList.Controllers.ContentController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.ContentController.HasPermissionToUse(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Controllers.ContentController, dvl::DigitalVoterList.Election.User, bool> HasPermissionToUseUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasPermissionToUse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ContentController), 
                         (object)null, "HasPermissionToUse", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Controllers.ContentController.View"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Controllers.ContentController, pf::System.Windows.Controls.UserControl> ViewGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_View", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ContentController), (object)null, "get_View");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Controllers.ContentController.View"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.ContentController, pf::System.Windows.Controls.UserControl> ViewSetUserControl
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_View", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ContentController), 
                         (object)null, "set_View", typeof(pf::System.Windows.Controls.UserControl));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MContentController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MContentController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.ContentController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.ContentController.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.ContentController> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ContentController), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.ContentController.HasPermissionToUse(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, bool> HasPermissionToUseUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasPermissionToUse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.ContentController, dvl::DigitalVoterList.Election.User, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.ContentController), 
                     base.Instance, "HasPermissionToUse", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Controllers.ContentController.View"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<pf::System.Windows.Controls.UserControl> ViewGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_View", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.ContentController, pf::System.Windows.Controls.UserControl>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.ContentController), base.Instance, "get_View");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Controllers.ContentController.View"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<pf::System.Windows.Controls.UserControl> ViewSetUserControl
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_View", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.ContentController, pf::System.Windows.Controls.UserControl>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.ContentController), base.Instance, "set_View", typeof(pf::System.Windows.Controls.UserControl));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.DAOFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.DAOFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DAOFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MDAOFactory
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MDAOFactory()
        : base(typeof(dvl::DigitalVoterList.Election.DAOFactory))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MDAOFactory.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MDAOFactory.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.DAOFactory), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.DAOFactory.CurrentUserDAO"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.IDataAccessObject> CurrentUserDAOGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CurrentUserDAO", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOFactory), "get_CurrentUserDAO");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOFactory.getDAO(DigitalVoterList.Election.User)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.IDataAccessObject> getDAOUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("getDAO", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOFactory), 
                     "getDAO", typeof(dvl::DigitalVoterList.Election.User));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.DAOPermissionProxy"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DAOPermissionProxy")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDAOPermissionProxy
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.DAOPermissionProxy>
    {
        /// <summary>Initializes a new mole</summary>
        public MDAOPermissionProxy()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MDAOPermissionProxy(dvl::DigitalVoterList.Election.DAOPermissionProxy instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ActionPermittedForThisUser(DigitalVoterList.Election.User,DigitalVoterList.Election.SystemAction,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.SystemAction, string, bool> ActionPermittedForThisUserUserSystemActionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActionPermittedForThisUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, 
                                                          dvl::DigitalVoterList.Election.SystemAction, string, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "ActionPermittedForThisUser", typeof(dvl::DigitalVoterList.Election.User), 
                     typeof(dvl::DigitalVoterList.Election.SystemAction), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ActionPermitted(DigitalVoterList.Election.SystemAction,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.SystemAction, string, bool> ActionPermittedSystemActionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActionPermitted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.SystemAction, string, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "ActionPermitted", typeof(dvl::DigitalVoterList.Election.SystemAction), typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ActionPermittedForThisUser(DigitalVoterList.Election.User,DigitalVoterList.Election.SystemAction,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.SystemAction, string, bool> ActionPermittedForThisUserUserSystemActionString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActionPermittedForThisUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "ActionPermittedForThisUser", typeof(dvl::DigitalVoterList.Election.User), 
                         typeof(dvl::DigitalVoterList.Election.SystemAction), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ActionPermitted(DigitalVoterList.Election.SystemAction,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.SystemAction, string, bool> ActionPermittedSystemActionString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActionPermitted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "ActionPermitted", typeof(dvl::DigitalVoterList.Election.SystemAction), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ChangePassword(DigitalVoterList.Election.User,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, string> ChangePasswordUserString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "ChangePassword", typeof(dvl::DigitalVoterList.Election.User), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ChangePassword(DigitalVoterList.Election.User,System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, string, string> ChangePasswordUserStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "ChangePassword", typeof(dvl::DigitalVoterList.Election.User), typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.FindElegibleVoters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>> FindElegibleVoters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FindElegibleVoters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "FindElegibleVoters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.Person)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>> FindPerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Find", typeof(dvl::DigitalVoterList.Election.Person));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>> FindUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Find", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.VoterCard)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VoterCard, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>> FindVoterCard
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Find", typeof(dvl::DigitalVoterList.Election.VoterCard));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.FindVotingVenue(DigitalVoterList.Election.Citizen)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> FindVotingVenueCitizen
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FindVotingVenue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "FindVotingVenue", typeof(dvl::DigitalVoterList.Election.Citizen));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.GetPermissions(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> GetPermissionsUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetPermissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "GetPermissions", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.GetWorkplaces(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> GetWorkplacesUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetWorkplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "GetWorkplaces", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadPerson(System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.Person> LoadPersonInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadPerson", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "LoadPerson", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadRawPeople"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, global::System.Collections.Generic.IEnumerable<dvl::DigitalVoterList.Election.RawPerson>> LoadRawPeople
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadRawPeople", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "LoadRawPeople");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.User> LoadUserInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "LoadUser", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, dvl::DigitalVoterList.Election.User> LoadUserString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "LoadUser", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, string, dvl::DigitalVoterList.Election.User> LoadUserStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "LoadUser", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadVoterCard(System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadVoterCard", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, "LoadVoterCard", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadVoterCard(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadVoterCard", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "LoadVoterCard", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkPeopleNotInRawDataUneligibleToVote"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy> MarkPeopleNotInRawDataUneligibleToVote
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkPeopleNotInRawDataUneligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "MarkPeopleNotInRawDataUneligibleToVote");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkUserInvalid(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User> MarkUserInvalidUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkUserInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "MarkUserInvalid", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkVoterCardInvalid(DigitalVoterList.Election.VoterCard)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VoterCard> MarkVoterCardInvalidVoterCard
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkVoterCardInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "MarkVoterCardInvalid", typeof(dvl::DigitalVoterList.Election.VoterCard));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.RestoreUser(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User> RestoreUserUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RestoreUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "RestoreUser", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.Person)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Person> SavePerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Save", typeof(dvl::DigitalVoterList.Election.Person));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User> SaveUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Save", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.VoterCard)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VoterCard> SaveVoterCard
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Save", typeof(dvl::DigitalVoterList.Election.VoterCard));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.SetHasVoted(DigitalVoterList.Election.Citizen)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Citizen> SetHasVotedCitizen
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "SetHasVoted", typeof(dvl::DigitalVoterList.Election.Citizen));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.SetHasVoted(DigitalVoterList.Election.Citizen,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Citizen, int> SetHasVotedCitizenInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "SetHasVoted", typeof(dvl::DigitalVoterList.Election.Citizen), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.UpdatePeople(System.Func`3{DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson,DigitalVoterList.Election.Person})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, global::System.Func<dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>> UpdatePeopleFuncOfPersonRawPersonPerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdatePeople", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "UpdatePeople", typeof(global::System.Func<dvl::DigitalVoterList.Election.Person, 
                                                                                  dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ValidateUser(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, string, bool> ValidateUserStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "ValidateUser", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Workplaces(DigitalVoterList.Election.User)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> WorkplacesUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Workplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                         (object)null, "Workplaces", typeof(dvl::DigitalVoterList.Election.User));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.WorksHere(DigitalVoterList.Election.VotingVenue,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VotingVenue, string, bool> WorksHereVotingVenueString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WorksHere", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                         "WorksHere", typeof(dvl::DigitalVoterList.Election.VotingVenue), typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MDAOPermissionProxy.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MDAOPermissionProxy.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Moles.MDAOPermissionProxy Bind(dvl::DigitalVoterList.Election.IDataAccessObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                  global::DigitalVoterList.Election.Moles.MDAOPermissionProxy, dvl::DigitalVoterList.Election.IDataAccessObject>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ChangePassword(DigitalVoterList.Election.User,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> ChangePasswordUserString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "ChangePassword", typeof(dvl::DigitalVoterList.Election.User), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ChangePassword(DigitalVoterList.Election.User,System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string, string> ChangePasswordUserStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, string, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "ChangePassword", typeof(dvl::DigitalVoterList.Election.User), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.#ctor(DigitalVoterList.Election.User,DigitalVoterList.Election.IDataAccessObject)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.IDataAccessObject> ConstructorUserIDataAccessObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), (object)null, 
                     ".ctor", typeof(dvl::DigitalVoterList.Election.User), typeof(dvl::DigitalVoterList.Election.IDataAccessObject));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.FindElegibleVoters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>> FindElegibleVoters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FindElegibleVoters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "FindElegibleVoters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.Person)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>> FindPerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Find", typeof(dvl::DigitalVoterList.Election.Person));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>> FindUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Find", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Find(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>> FindVoterCard
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.VoterCard, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Find", typeof(dvl::DigitalVoterList.Election.VoterCard));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.FindVotingVenue(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> FindVotingVenueCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FindVotingVenue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                     base.Instance, "FindVotingVenue", typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.GetPermissions(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> GetPermissionsUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetPermissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "GetPermissions", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.GetWorkplaces(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> GetWorkplacesUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetWorkplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "GetWorkplaces", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadPerson(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.Person> LoadPersonInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadPerson", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.Person>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadPerson", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadRawPeople"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<dvl::DigitalVoterList.Election.RawPerson>> LoadRawPeople
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadRawPeople", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      global::System.Collections.Generic.IEnumerable<dvl::DigitalVoterList.Election.RawPerson>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadRawPeople");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.User> LoadUserInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadUser", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.User> LoadUserString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadUser", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadUser(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, dvl::DigitalVoterList.Election.User> LoadUserStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, string, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadUser", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadVoterCard(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadVoterCard", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, int, dvl::DigitalVoterList.Election.VoterCard>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadVoterCard", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.LoadVoterCard(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadVoterCard", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, dvl::DigitalVoterList.Election.VoterCard>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "LoadVoterCard", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkPeopleNotInRawDataUneligibleToVote"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action MarkPeopleNotInRawDataUneligibleToVote
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkPeopleNotInRawDataUneligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "MarkPeopleNotInRawDataUneligibleToVote");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkUserInvalid(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> MarkUserInvalidUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkUserInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                     base.Instance, "MarkUserInvalid", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.MarkVoterCardInvalid(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> MarkVoterCardInvalidVoterCard
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkVoterCardInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VoterCard>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                     base.Instance, "MarkVoterCardInvalid", typeof(dvl::DigitalVoterList.Election.VoterCard));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.RestoreUser(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> RestoreUserUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RestoreUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "RestoreUser", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.Person)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person> SavePerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Person>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Save", typeof(dvl::DigitalVoterList.Election.Person));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> SaveUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Save", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Save(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> SaveVoterCard
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VoterCard>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Save", typeof(dvl::DigitalVoterList.Election.VoterCard));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.SetHasVoted(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> SetHasVotedCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Citizen>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "SetHasVoted", typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.SetHasVoted(DigitalVoterList.Election.Citizen,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, int> SetHasVotedCitizenInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHasVoted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.Citizen, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "SetHasVoted", typeof(dvl::DigitalVoterList.Election.Citizen), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.UpdatePeople(System.Func`3{DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson,DigitalVoterList.Election.Person})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Func<dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>> UpdatePeopleFuncOfPersonRawPersonPerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdatePeople", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, global::System.Func<dvl::DigitalVoterList.Election.Person, 
                                                                                                                                 dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), 
                     base.Instance, "UpdatePeople", typeof(global::System.Func<dvl::DigitalVoterList.Election.Person, 
                                                                               dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.ValidateUser(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> ValidateUserStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, string, string, bool>
                                                                                              (value)), typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "ValidateUser", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.Workplaces(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> WorkplacesUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Workplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, 
                                                                                                      dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, "Workplaces", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DAOPermissionProxy.WorksHere(DigitalVoterList.Election.VotingVenue,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, string, bool> WorksHereVotingVenueString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WorksHere", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DAOPermissionProxy, dvl::DigitalVoterList.Election.VotingVenue, string, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy), base.Instance, 
                     "WorksHere", typeof(dvl::DigitalVoterList.Election.VotingVenue), typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.Administration.DataAnalyzer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.Administration.DataAnalyzer))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DataAnalyzer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDataAnalyzer
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.Administration.DataAnalyzer>
    {
        /// <summary>Initializes a new mole</summary>
        public MDataAnalyzer()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MDataAnalyzer(dvl::DigitalVoterList.Election.Administration.DataAnalyzer instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Administration.Moles.MDataAnalyzer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Administration.Moles.MDataAnalyzer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.Administration.DataAnalyzer), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Administration.DataAnalyzer.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Administration.DataAnalyzer> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Administration.DataAnalyzer), (object)null, ".ctor");
            }
        }
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.Administration.DataCollector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.Administration.DataCollector))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DataCollector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDataCollector
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.Administration.DataCollector>
    {
        /// <summary>Initializes a new mole</summary>
        public MDataCollector()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MDataCollector(dvl::DigitalVoterList.Election.Administration.DataCollector instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Administration.Moles.MDataCollector.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Administration.Moles.MDataCollector.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.Administration.DataCollector), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Administration.DataCollector.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Administration.DataCollector> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Administration.DataCollector), (object)null, ".ctor");
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.DataTransformer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.DataTransformer))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DataTransformer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDataTransformer
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.DataTransformer>
    {
        /// <summary>Initializes a new mole</summary>
        public MDataTransformer()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MDataTransformer(dvl::DigitalVoterList.Election.DataTransformer instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.CalculateEligibleToVote(DigitalVoterList.Election.RawPerson)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.RawPerson, bool> CalculateEligibleToVoteRawPerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CalculateEligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                         (object)null, "CalculateEligibleToVote", typeof(dvl::DigitalVoterList.Election.RawPerson));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.GenerateSecurityQuestions(DigitalVoterList.Election.RawPerson)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.RawPerson, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> GenerateSecurityQuestionsRawPerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateSecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                         (object)null, "GenerateSecurityQuestions", typeof(dvl::DigitalVoterList.Election.RawPerson));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.TransformData(DigitalVoterList.Election.ElectionEvent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.ElectionEvent> TransformDataElectionEvent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TransformData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                         (object)null, "TransformData", typeof(dvl::DigitalVoterList.Election.ElectionEvent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.UpdatePerson(DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person> UpdatePersonPersonRawPerson
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdatePerson", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DataTransformer), (object)null, 
                         "UpdatePerson", typeof(dvl::DigitalVoterList.Election.Person), typeof(dvl::DigitalVoterList.Election.RawPerson));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MDataTransformer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MDataTransformer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.DataTransformer), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.CalculateEligibleToVote(DigitalVoterList.Election.RawPerson)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, bool> CalculateEligibleToVoteRawPerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CalculateEligibleToVote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                     base.Instance, "CalculateEligibleToVote", typeof(dvl::DigitalVoterList.Election.RawPerson));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.DataTransformer> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.DataTransformer), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.GenerateSecurityQuestions(DigitalVoterList.Election.RawPerson)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>> GenerateSecurityQuestionsRawPerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateSecurityQuestions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.DataTransformer, 
                                                                                                      dvl::DigitalVoterList.Election.RawPerson, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Utilities.Quiz>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                     base.Instance, "GenerateSecurityQuestions", typeof(dvl::DigitalVoterList.Election.RawPerson));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.TransformData(DigitalVoterList.Election.ElectionEvent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.ElectionEvent> TransformDataElectionEvent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TransformData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.ElectionEvent>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DataTransformer), 
                     base.Instance, "TransformData", typeof(dvl::DigitalVoterList.Election.ElectionEvent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.DataTransformer.UpdatePerson(DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person> UpdatePersonPersonRawPerson
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdatePerson", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.DataTransformer, dvl::DigitalVoterList.Election.Person, 
                                                          dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>(value)), 
                     typeof(dvl::DigitalVoterList.Election.DataTransformer), base.Instance, 
                     "UpdatePerson", typeof(dvl::DigitalVoterList.Election.Person), typeof(dvl::DigitalVoterList.Election.RawPerson));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.ElectionAdministrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.ElectionAdministrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ElectionAdministrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MElectionAdministrationController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.ElectionAdministrationController>
    {
        /// <summary>Initializes a new mole</summary>
        public MElectionAdministrationController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MElectionAdministrationController(dvl::DigitalVoterList.Controllers.ElectionAdministrationController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MElectionAdministrationController.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MElectionAdministrationController.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.ElectionAdministrationController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.ElectionAdministrationController.#ctor(DigitalVoterList.Views.ElectionAdministrationView)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.ElectionAdministrationController, dvl::DigitalVoterList.Views.ElectionAdministrationView> ConstructorElectionAdministrationView
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ElectionAdministrationController), 
                     (object)null, ".ctor", typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.ElectionAdministrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ElectionAdministrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MElectionAdministrationView
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.ElectionAdministrationView>
    {
        /// <summary>Initializes a new mole</summary>
        public MElectionAdministrationView()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MElectionAdministrationView(dvl::DigitalVoterList.Views.ElectionAdministrationView instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ElectionAdministrationView.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ElectionAdministrationView> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ElectionAdministrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ElectionAdministrationView, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MElectionAdministrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MElectionAdministrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, pc::System.Windows.Markup.IAddChild>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MElectionAdministrationView Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ElectionAdministrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MElectionAdministrationView, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ElectionAdministrationView.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ElectionAdministrationView> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ElectionAdministrationView.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.ElectionAdministrationView>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ElectionAdministrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.ElectionAdministrationView, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.ElectionEvent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.ElectionEvent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ElectionEvent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MElectionEvent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.ElectionEvent>
    {
        /// <summary>Initializes a new mole</summary>
        public MElectionEvent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MElectionEvent(dvl::DigitalVoterList.Election.ElectionEvent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.ElectionEvent, global::System.DateTime> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.ElectionEvent, global::System.DateTime> DateSetDateTime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), 
                         (object)null, "set_Date", typeof(global::System.DateTime));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.ElectionEvent, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.ElectionEvent, string> NameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), (object)null, "set_Name", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.ElectionEvent.VotingVenueForCitizen(DigitalVoterList.Election.Citizen)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.ElectionEvent, dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> VotingVenueForCitizenCitizen
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VotingVenueForCitizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), 
                         (object)null, "VotingVenueForCitizen", typeof(dvl::DigitalVoterList.Election.Citizen));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MElectionEvent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MElectionEvent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.ElectionEvent), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.ElectionEvent.#ctor(System.DateTime,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.ElectionEvent, global::System.DateTime, string> ConstructorDateTimeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.ElectionEvent), (object)null, 
                     ".ctor", typeof(global::System.DateTime), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTime> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.ElectionEvent, global::System.DateTime>(value)
                                                                                         ), typeof(dvl::DigitalVoterList.Election.ElectionEvent), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTime> DateSetDateTime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.ElectionEvent, global::System.DateTime>(value)
                                                                                         ), typeof(dvl::DigitalVoterList.Election.ElectionEvent), base.Instance, "set_Date", typeof(global::System.DateTime));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.ElectionEvent, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.ElectionEvent), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.ElectionEvent.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.ElectionEvent, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.ElectionEvent), base.Instance, "set_Name", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.ElectionEvent.VotingVenueForCitizen(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> VotingVenueForCitizenCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VotingVenueForCitizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.ElectionEvent, 
                                                                                                      dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue>(value)), 
                     typeof(dvl::DigitalVoterList.Election.ElectionEvent), 
                     base.Instance, "VotingVenueForCitizen", typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.LoginController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.LoginController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = LoginController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MLoginController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.LoginController>
    {
        /// <summary>Initializes a new mole</summary>
        public MLoginController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MLoginController(dvl::DigitalVoterList.Controllers.LoginController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.LoginController.ValidateUser(System.Object,DigitalVoterList.Views.LoginEventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.LoginController, object, dvl::DigitalVoterList.Views.LoginEventArgs> ValidateUserObjectLoginEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.LoginController), (object)null, 
                         "ValidateUser", typeof(object), typeof(dvl::DigitalVoterList.Views.LoginEventArgs));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MLoginController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MLoginController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.LoginController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.LoginController.#ctor(DigitalVoterList.Views.LoginWindow)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.LoginController, dvl::DigitalVoterList.Views.LoginWindow> ConstructorLoginWindow
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.LoginController), 
                     (object)null, ".ctor", typeof(dvl::DigitalVoterList.Views.LoginWindow));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.LoginController.ValidateUser(System.Object,DigitalVoterList.Views.LoginEventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, dvl::DigitalVoterList.Views.LoginEventArgs> ValidateUserObjectLoginEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.LoginController, object, dvl::DigitalVoterList.Views.LoginEventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.LoginController), base.Instance, 
                     "ValidateUser", typeof(object), typeof(dvl::DigitalVoterList.Views.LoginEventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.LoginEventArgs"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.LoginEventArgs))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = LoginEventArgs")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MLoginEventArgs
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.LoginEventArgs>
    {
        /// <summary>Initializes a new mole</summary>
        public MLoginEventArgs()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MLoginEventArgs(dvl::DigitalVoterList.Views.LoginEventArgs instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Password"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Views.LoginEventArgs, string> PasswordGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Password", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginEventArgs), (object)null, "get_Password");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Password"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginEventArgs, string> PasswordSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Password", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginEventArgs), (object)null, "set_Password", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Username"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Views.LoginEventArgs, string> UsernameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginEventArgs), (object)null, "get_Username");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Username"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginEventArgs, string> UsernameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginEventArgs), (object)null, "set_Username", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MLoginEventArgs.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MLoginEventArgs.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.LoginEventArgs), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginEventArgs.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginEventArgs, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginEventArgs), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Password"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PasswordGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Password", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginEventArgs, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.LoginEventArgs), base.Instance, "get_Password");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Password"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PasswordSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Password", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginEventArgs, string>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.LoginEventArgs), base.Instance, "set_Password", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Username"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UsernameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginEventArgs, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.LoginEventArgs), base.Instance, "get_Username");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Views.LoginEventArgs.Username"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UsernameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginEventArgs, string>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.LoginEventArgs), base.Instance, "set_Username", typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.LoginWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.LoginWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = LoginWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MLoginWindow
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.LoginWindow>
    {
        /// <summary>Initializes a new mole</summary>
        public MLoginWindow()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MLoginWindow(dvl::DigitalVoterList.Views.LoginWindow instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.EnterClicked(System.Object,System.Windows.Input.KeyEventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow, object, pc::System.Windows.Input.KeyEventArgs> EnterClickedObjectKeyEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnterClicked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, 
                         "EnterClicked", typeof(object), typeof(pc::System.Windows.Input.KeyEventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.LoginBtn_Click(System.Object,System.Windows.RoutedEventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow, object, pc::System.Windows.RoutedEventArgs> LoginBtn_ClickObjectRoutedEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoginBtn_Click", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, 
                         "LoginBtn_Click", typeof(object), typeof(pc::System.Windows.RoutedEventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.add_LoginEvent(System.EventHandler`1{DigitalVoterList.Views.LoginEventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow, global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>> LoginEventAddEventHandlerOfLoginEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_LoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), 
                         (object)null, "add_LoginEvent", typeof(global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.remove_LoginEvent(System.EventHandler`1{DigitalVoterList.Views.LoginEventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow, global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>> LoginEventRemoveEventHandlerOfLoginEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_LoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), 
                         (object)null, "remove_LoginEvent", typeof(global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.RaiseLoginEvent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow> RaiseLoginEvent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RaiseLoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, "RaiseLoginEvent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MLoginWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MLoginWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.LoginWindow), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.LoginWindow, global::DigitalVoterList.Views.Moles.MLoginWindow, pc::System.Windows.IInputElement>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.LoginWindow, global::DigitalVoterList.Views.Moles.MLoginWindow, pc::System.Windows.Markup.IAddChild>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.LoginWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MLoginWindow, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.LoginWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MLoginWindow, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.LoginWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MLoginWindow, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.LoginWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MLoginWindow, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MLoginWindow Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind
                                                                 <dvl::DigitalVoterList.Views.LoginWindow, global::DigitalVoterList.Views.Moles.MLoginWindow, sx::System.Windows.Markup.IQueryAmbient>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.LoginWindow> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.LoginWindow), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.EnterClicked(System.Object,System.Windows.Input.KeyEventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, pc::System.Windows.Input.KeyEventArgs> EnterClickedObjectKeyEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnterClicked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.LoginWindow, object, pc::System.Windows.Input.KeyEventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), base.Instance, 
                     "EnterClicked", typeof(object), typeof(pc::System.Windows.Input.KeyEventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginWindow>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.LoginBtn_Click(System.Object,System.Windows.RoutedEventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, pc::System.Windows.RoutedEventArgs> LoginBtn_ClickObjectRoutedEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoginBtn_Click", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.LoginWindow, object, pc::System.Windows.RoutedEventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), base.Instance, 
                     "LoginBtn_Click", typeof(object), typeof(pc::System.Windows.RoutedEventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.add_LoginEvent(System.EventHandler`1{DigitalVoterList.Views.LoginEventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>> LoginEventAddEventHandlerOfLoginEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_LoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.LoginWindow, global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), 
                     base.Instance, "add_LoginEvent", typeof(global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.remove_LoginEvent(System.EventHandler`1{DigitalVoterList.Views.LoginEventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>> LoginEventRemoveEventHandlerOfLoginEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_LoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.LoginWindow, global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), 
                     base.Instance, "remove_LoginEvent", typeof(global::System.EventHandler<dvl::DigitalVoterList.Views.LoginEventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.RaiseLoginEvent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action RaiseLoginEvent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RaiseLoginEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginWindow>(value)), 
                     typeof(dvl::DigitalVoterList.Views.LoginWindow), base.Instance, "RaiseLoginEvent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.LoginWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.LoginWindow, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.LoginWindow), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.MainWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.MainWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MainWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMainWindow
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.MainWindow>
    {
        /// <summary>Initializes a new mole</summary>
        public MMainWindow()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMainWindow(dvl::DigitalVoterList.Views.MainWindow instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.MainWindow.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.MainWindow> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.MainWindow), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.MainWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.MainWindow, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.MainWindow), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MMainWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MMainWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.MainWindow), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.MainWindow, global::DigitalVoterList.Views.Moles.MMainWindow, pc::System.Windows.IInputElement>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.MainWindow, global::DigitalVoterList.Views.Moles.MMainWindow, pc::System.Windows.Markup.IAddChild>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.MainWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MMainWindow, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind
                                                                 <dvl::DigitalVoterList.Views.MainWindow, global::DigitalVoterList.Views.Moles.MMainWindow, pf::System.Windows.IFrameworkInputElement>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.MainWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MMainWindow, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.MainWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MMainWindow, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MMainWindow Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.MainWindow, global::DigitalVoterList.Views.Moles.MMainWindow, sx::System.Windows.Markup.IQueryAmbient>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.MainWindow.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.MainWindow> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.MainWindow), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.MainWindow.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.MainWindow>(value)), 
                     typeof(dvl::DigitalVoterList.Views.MainWindow), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.MainWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.MainWindow, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.MainWindow), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.MainWindowController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.MainWindowController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MainWindowController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMainWindowController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.MainWindowController>
    {
        /// <summary>Initializes a new mole</summary>
        public MMainWindowController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMainWindowController(dvl::DigitalVoterList.Controllers.MainWindowController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.MenuClicked(System.Object,System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.MainWindowController, object, global::System.EventArgs> MenuClickedObjectEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MenuClicked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.MainWindowController), (object)null, 
                         "MenuClicked", typeof(object), typeof(global::System.EventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.ShowScreen(DigitalVoterList.Controllers.ContentController)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.MainWindowController, dvl::DigitalVoterList.Controllers.ContentController> ShowScreenContentController
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ShowScreen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.MainWindowController), 
                         (object)null, "ShowScreen", typeof(dvl::DigitalVoterList.Controllers.ContentController));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.UpdateMenuAccess"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.MainWindowController> UpdateMenuAccess
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdateMenuAccess", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.MainWindowController), (object)null, "UpdateMenuAccess");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MMainWindowController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MMainWindowController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.MainWindowController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.#ctor(DigitalVoterList.Views.MainWindow)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.MainWindowController, dvl::DigitalVoterList.Views.MainWindow> ConstructorMainWindow
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.MainWindowController), 
                     (object)null, ".ctor", typeof(dvl::DigitalVoterList.Views.MainWindow));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.MenuClicked(System.Object,System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.EventArgs> MenuClickedObjectEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MenuClicked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.MainWindowController, object, global::System.EventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.MainWindowController), base.Instance, 
                     "MenuClicked", typeof(object), typeof(global::System.EventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.ShowScreen(DigitalVoterList.Controllers.ContentController)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.ContentController> ShowScreenContentController
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ShowScreen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.MainWindowController, dvl::DigitalVoterList.Controllers.ContentController>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.MainWindowController), 
                     base.Instance, "ShowScreen", typeof(dvl::DigitalVoterList.Controllers.ContentController));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.UpdateMenuAccess"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action UpdateMenuAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdateMenuAccess", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Controllers.MainWindowController>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Controllers.MainWindowController), base.Instance, "UpdateMenuAccess");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.MainWindowController.&lt;.ctor&gt;b__0(System.Object,System.Windows.RoutedEventArgs)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, pc::System.Windows.RoutedEventArgs> _ctorb__0ObjectRoutedEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<.ctor>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.MainWindowController), 
                     "<.ctor>b__0", typeof(object), typeof(pc::System.Windows.RoutedEventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.ManualRegistrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.ManualRegistrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ManualRegistrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MManualRegistrationController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.ManualRegistrationController>
    {
        /// <summary>Initializes a new mole</summary>
        public MManualRegistrationController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MManualRegistrationController(dvl::DigitalVoterList.Controllers.ManualRegistrationController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MManualRegistrationController.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MManualRegistrationController.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.ManualRegistrationController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.ManualRegistrationController.#ctor(DigitalVoterList.Views.ManualRegistrationView)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.ManualRegistrationController, dvl::DigitalVoterList.Views.ManualRegistrationView> ConstructorManualRegistrationView
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.ManualRegistrationController), 
                     (object)null, ".ctor", typeof(dvl::DigitalVoterList.Views.ManualRegistrationView));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.ManualRegistrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.ManualRegistrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ManualRegistrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MManualRegistrationView
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.ManualRegistrationView>
    {
        /// <summary>Initializes a new mole</summary>
        public MManualRegistrationView()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MManualRegistrationView(dvl::DigitalVoterList.Views.ManualRegistrationView instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ManualRegistrationView.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ManualRegistrationView> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ManualRegistrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ManualRegistrationView, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MManualRegistrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MManualRegistrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, pc::System.Windows.Markup.IAddChild>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MManualRegistrationView Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.ManualRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MManualRegistrationView, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ManualRegistrationView.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.ManualRegistrationView> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ManualRegistrationView.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.ManualRegistrationView>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.ManualRegistrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.ManualRegistrationView, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.ManualRegistrationView), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.PermissionException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.PermissionException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = PermissionException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MPermissionException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.PermissionException>
    {
        /// <summary>Initializes a new mole</summary>
        public MPermissionException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MPermissionException(dvl::DigitalVoterList.Election.PermissionException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.SystemAction"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.SystemAction> SystemActionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SystemAction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.PermissionException), (object)null, "get_SystemAction");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.SystemAction"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.SystemAction> SystemActionSetSystemAction
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SystemAction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.PermissionException), 
                         (object)null, "set_SystemAction", typeof(dvl::DigitalVoterList.Election.SystemAction));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.User"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.User> UserGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_User", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.PermissionException), (object)null, "get_User");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.User"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.User> UserSetUser
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_User", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.PermissionException), 
                         (object)null, "set_User", typeof(dvl::DigitalVoterList.Election.User));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MPermissionException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MPermissionException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.PermissionException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Moles.MPermissionException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.PermissionException, 
                                                                  global::DigitalVoterList.Election.Moles.MPermissionException, global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.PermissionException.#ctor(DigitalVoterList.Election.SystemAction,DigitalVoterList.Election.User,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.SystemAction, dvl::DigitalVoterList.Election.User, string> ConstructorSystemActionUserString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.PermissionException), (object)null, 
                     ".ctor", typeof(dvl::DigitalVoterList.Election.SystemAction), typeof(dvl::DigitalVoterList.Election.User), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.SystemAction"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.SystemAction> SystemActionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SystemAction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.SystemAction>(value)), 
                     typeof(dvl::DigitalVoterList.Election.PermissionException), base.Instance, "get_SystemAction");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.SystemAction"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.SystemAction> SystemActionSetSystemAction
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SystemAction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.SystemAction>(value)), 
                     typeof(dvl::DigitalVoterList.Election.PermissionException), 
                     base.Instance, "set_SystemAction", typeof(dvl::DigitalVoterList.Election.SystemAction));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.User"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User> UserGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_User", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.PermissionException), base.Instance, "get_User");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.PermissionException.User"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> UserSetUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_User", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.PermissionException, dvl::DigitalVoterList.Election.User>(value)), 
                     typeof(dvl::DigitalVoterList.Election.PermissionException), base.Instance, "set_User", typeof(dvl::DigitalVoterList.Election.User));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.Person"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.Person))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Person")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MPerson
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.Person>
    {
        /// <summary>Initializes a new mole</summary>
        public MPerson()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MPerson(dvl::DigitalVoterList.Election.Person instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_Address");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AddressSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_Address", typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> AddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_Address");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, string> AddressSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_Address", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Cpr"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> CprGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Cpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_Cpr");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Cpr"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, string> CprSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Cpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_Cpr", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.DbId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, int> DbIdGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_DbId");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.DbId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, int> DbIdSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_DbId", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, string> NameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_Name", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PassportNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> PassportNumberGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_PassportNumber");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PassportNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, string> PassportNumberSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_PassportNumber", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PlaceOfBirth"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> PlaceOfBirthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PlaceOfBirth", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "get_PlaceOfBirth");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PlaceOfBirth"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, string> PlaceOfBirthSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PlaceOfBirth", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "set_PlaceOfBirth", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Person.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MPerson.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MPerson.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.Person), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Person.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Person.#ctor(System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person, int> ConstructorInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Person), (object)null, ".ctor", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Cpr"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CprGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Cpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_Cpr");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Cpr"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CprSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Cpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_Cpr", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.DbId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> DbIdGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_DbId");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.DbId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> DbIdSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_DbId", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_Name", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PassportNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PassportNumberGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_PassportNumber");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PassportNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PassportNumberSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_PassportNumber", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PlaceOfBirth"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PlaceOfBirthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PlaceOfBirth", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "get_PlaceOfBirth");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.Person.PlaceOfBirth"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PlaceOfBirthSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PlaceOfBirth", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "set_PlaceOfBirth", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Person.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.Person, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Person), base.Instance, "ToString");
            }
        }
    }
}
namespace DigitalVoterList.Utilities.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Utilities.Quiz"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Utilities.Quiz))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Quiz")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MQuiz
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Utilities.Quiz>
    {
        /// <summary>Initializes a new mole</summary>
        public MQuiz()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MQuiz(dvl::DigitalVoterList.Utilities.Quiz instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Answer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Quiz, string> AnswerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Answer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Quiz), (object)null, "get_Answer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Answer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Quiz, string> AnswerSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Answer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Quiz), (object)null, "set_Answer", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Question"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Utilities.Quiz, string> QuestionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Question", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Quiz), (object)null, "get_Question");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Question"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Quiz, string> QuestionSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Question", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Quiz), (object)null, "set_Question", typeof(string));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Answer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AnswerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Answer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Quiz, string>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Quiz), base.Instance, "get_Answer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Answer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AnswerSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Answer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Quiz, string>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Quiz), base.Instance, "set_Answer", typeof(string));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Utilities.Moles.MQuiz.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Utilities.Moles.MQuiz.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Utilities.Quiz), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Utilities.Quiz.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Quiz, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Utilities.Quiz), (object)null, ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Question"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> QuestionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Question", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Quiz, string>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Quiz), base.Instance, "get_Question");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Utilities.Quiz.Question"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> QuestionSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Question", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Utilities.Quiz, string>(value)), 
                     typeof(dvl::DigitalVoterList.Utilities.Quiz), base.Instance, "set_Question", typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.RandomQuestionController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RandomQuestionController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRandomQuestionController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.RandomQuestionController>
    {
        /// <summary>Initializes a new mole</summary>
        public MRandomQuestionController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRandomQuestionController(dvl::DigitalVoterList.Controllers.RandomQuestionController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.RandomQuestionController.RequestQuestion(System.Object,System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.RandomQuestionController, object, global::System.EventArgs> RequestQuestionObjectEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestQuestion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController), (object)null, 
                         "RequestQuestion", typeof(object), typeof(global::System.EventArgs));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MRandomQuestionController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MRandomQuestionController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.RandomQuestionController.#ctor(DigitalVoterList.Views.SecurityQuesitonView,DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.RandomQuestionController, dvl::DigitalVoterList.Views.SecurityQuesitonView, dvl::DigitalVoterList.Election.Citizen> ConstructorSecurityQuesitonViewCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController), (object)null, 
                     ".ctor", typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.RandomQuestionController.RequestQuestion(System.Object,System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.EventArgs> RequestQuestionObjectEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestQuestion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.RandomQuestionController, object, global::System.EventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController), base.Instance, 
                     "RequestQuestion", typeof(object), typeof(global::System.EventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.RawPerson"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.RawPerson))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RawPerson")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRawPerson
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.RawPerson>
    {
        /// <summary>Initializes a new mole</summary>
        public MRawPerson()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRawPerson(dvl::DigitalVoterList.Election.RawPerson instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Address");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.AddressPrevious"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AddressPreviousGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AddressPrevious", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_AddressPrevious");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.AddressPrevious"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AddressPreviousSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AddressPrevious", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_AddressPrevious", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AddressSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Address", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Age"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> AgeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Age");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Age"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> AgeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Age", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Alive"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> AliveGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Alive", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Alive");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Alive"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> AliveSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Alive", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Alive", typeof(bool));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> AddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Address");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.AddressPrevious"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> AddressPreviousGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AddressPrevious", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_AddressPrevious");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.AddressPrevious"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> AddressPreviousSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AddressPrevious", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_AddressPrevious", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> AddressSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Address", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Age"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, int> AgeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Age");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Age"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, int> AgeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Age", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Alive"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, bool> AliveGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Alive", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Alive");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Alive"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, bool> AliveSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Alive", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Alive", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthday"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?> BirthdayGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Birthday", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Birthday");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthday"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?> BirthdaySetNullableOfDateTime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Birthday", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), 
                         (object)null, "set_Birthday", typeof(global::System.DateTime?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthplace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> BirthplaceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Birthplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Birthplace");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthplace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> BirthplaceSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Birthplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Birthplace", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.CPR"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> CPRGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CPR", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_CPR");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.CPR"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> CPRSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CPR", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_CPR", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.City"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> CityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_City", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_City");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.City"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> CitySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_City", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_City", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Deathdate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?> DeathdateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Deathdate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Deathdate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Deathdate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?> DeathdateSetNullableOfDateTime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Deathdate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), 
                         (object)null, "set_Deathdate", typeof(global::System.DateTime?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Disempowered"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, bool> DisempoweredGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Disempowered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Disempowered");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Disempowered"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, bool> DisempoweredSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Disempowered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Disempowered", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.DriverID"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> DriverIDGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DriverID", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_DriverID");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.DriverID"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> DriverIDSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DriverID", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_DriverID", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Education"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> EducationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Education", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Education");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Education"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> EducationSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Education", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Education", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.FatherName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> FatherNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FatherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_FatherName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.FatherName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> FatherNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_FatherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_FatherName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MilitaryServed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, bool> MilitaryServedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MilitaryServed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_MilitaryServed");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MilitaryServed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, bool> MilitaryServedSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MilitaryServed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_MilitaryServed", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MotherName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> MotherNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MotherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_MotherName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MotherName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> MotherNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MotherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_MotherName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> NameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Name", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Nationality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> NationalityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Nationality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Nationality");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Nationality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> NationalitySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Nationality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Nationality", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.PassportNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> PassportNumberGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_PassportNumber");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.PassportNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> PassportNumberSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_PassportNumber", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.TelephoneNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> TelephoneNumberGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TelephoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_TelephoneNumber");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.TelephoneNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> TelephoneNumberSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TelephoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_TelephoneNumber", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Workplace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, string> WorkplaceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Workplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Workplace");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Workplace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, string> WorkplaceSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Workplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Workplace", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Zipcode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.RawPerson, int> ZipcodeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Zipcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "get_Zipcode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Zipcode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson, int> ZipcodeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Zipcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, "set_Zipcode", typeof(int));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MRawPerson.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MRawPerson.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.RawPerson), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthday"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTime?> BirthdayGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Birthday", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Birthday");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthday"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTime?> BirthdaySetNullableOfDateTime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Birthday", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Birthday", typeof(global::System.DateTime?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthplace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> BirthplaceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Birthplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Birthplace");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Birthplace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> BirthplaceSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Birthplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Birthplace", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.CPR"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CPRGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CPR", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_CPR");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.CPR"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CPRSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CPR", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_CPR", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.City"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_City", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_City");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.City"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CitySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_City", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_City", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.RawPerson.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.RawPerson> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.RawPerson), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Deathdate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTime?> DeathdateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Deathdate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Deathdate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Deathdate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTime?> DeathdateSetNullableOfDateTime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Deathdate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, global::System.DateTime?>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Deathdate", typeof(global::System.DateTime?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Disempowered"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisempoweredGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Disempowered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Disempowered");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Disempowered"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisempoweredSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Disempowered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Disempowered", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.DriverID"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DriverIDGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DriverID", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_DriverID");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.DriverID"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> DriverIDSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DriverID", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_DriverID", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Education"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> EducationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Education", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Education");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Education"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> EducationSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Education", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Education", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.FatherName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> FatherNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FatherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_FatherName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.FatherName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> FatherNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_FatherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_FatherName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MilitaryServed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MilitaryServedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MilitaryServed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_MilitaryServed");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MilitaryServed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> MilitaryServedSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MilitaryServed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_MilitaryServed", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MotherName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MotherNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MotherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_MotherName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.MotherName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> MotherNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MotherName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_MotherName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Name", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Nationality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NationalityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Nationality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Nationality");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Nationality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NationalitySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Nationality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Nationality", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.PassportNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PassportNumberGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_PassportNumber");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.PassportNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PassportNumberSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PassportNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_PassportNumber", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.TelephoneNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TelephoneNumberGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TelephoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_TelephoneNumber");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.TelephoneNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> TelephoneNumberSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TelephoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_TelephoneNumber", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Workplace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> WorkplaceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Workplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Workplace");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Workplace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> WorkplaceSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Workplace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Workplace", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Zipcode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> ZipcodeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Zipcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "get_Zipcode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.RawPerson.Zipcode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> ZipcodeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Zipcode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.RawPerson, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.RawPerson), base.Instance, "set_Zipcode", typeof(int));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.SecurityQuesitonView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = SecurityQuesitonView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MSecurityQuesitonView
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.SecurityQuesitonView>
    {
        /// <summary>Initializes a new mole</summary>
        public MSecurityQuesitonView()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MSecurityQuesitonView(dvl::DigitalVoterList.Views.SecurityQuesitonView instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.FireQuestionRequest(System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventArgs> FireQuestionRequestEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FireQuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                         (object)null, "FireQuestionRequest", typeof(global::System.EventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.add_QuestionRequest(System.EventHandler`1{System.EventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventHandler<global::System.EventArgs>> QuestionRequestAddEventHandlerOfEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_QuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                         (object)null, "add_QuestionRequest", typeof(global::System.EventHandler<global::System.EventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.remove_QuestionRequest(System.EventHandler`1{System.EventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventHandler<global::System.EventArgs>> QuestionRequestRemoveEventHandlerOfEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_QuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                         (object)null, "remove_QuestionRequest", typeof(global::System.EventHandler<global::System.EventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.Reset"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView> Reset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reset", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), (object)null, "Reset");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.SetQuestion(DigitalVoterList.Utilities.Quiz)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, dvl::DigitalVoterList.Utilities.Quiz> SetQuestionQuiz
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetQuestion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                         (object)null, "SetQuestion", typeof(dvl::DigitalVoterList.Utilities.Quiz));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView._newQuestionBtn_Click(System.Object,System.Windows.RoutedEventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView, object, pc::System.Windows.RoutedEventArgs> _newQuestionBtn_ClickObjectRoutedEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("_newQuestionBtn_Click", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), (object)null, 
                         "_newQuestionBtn_Click", typeof(object), typeof(pc::System.Windows.RoutedEventArgs));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MSecurityQuesitonView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MSecurityQuesitonView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, pc::System.Windows.Markup.IAddChild>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MSecurityQuesitonView Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.SecurityQuesitonView, 
                                                                  global::DigitalVoterList.Views.Moles.MSecurityQuesitonView, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.SecurityQuesitonView> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.FireQuestionRequest(System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventArgs> FireQuestionRequestEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FireQuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventArgs>
                                                                                                 (value)), typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                                                                                          base.Instance, "FireQuestionRequest", typeof(global::System.EventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.add_QuestionRequest(System.EventHandler`1{System.EventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<global::System.EventArgs>> QuestionRequestAddEventHandlerOfEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_QuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventHandler<global::System.EventArgs>>(value)), 
                     typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                     base.Instance, "add_QuestionRequest", typeof(global::System.EventHandler<global::System.EventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.remove_QuestionRequest(System.EventHandler`1{System.EventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<global::System.EventArgs>> QuestionRequestRemoveEventHandlerOfEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_QuestionRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, global::System.EventHandler<global::System.EventArgs>>(value)), 
                     typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), 
                     base.Instance, "remove_QuestionRequest", typeof(global::System.EventHandler<global::System.EventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.Reset"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Reset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reset", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), base.Instance, "Reset");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.SetQuestion(DigitalVoterList.Utilities.Quiz)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Utilities.Quiz> SetQuestionQuiz
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetQuestion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, dvl::DigitalVoterList.Utilities.Quiz>(value)), 
                     typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), base.Instance, "SetQuestion", typeof(dvl::DigitalVoterList.Utilities.Quiz));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.SecurityQuesitonView._newQuestionBtn_Click(System.Object,System.Windows.RoutedEventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, pc::System.Windows.RoutedEventArgs> _newQuestionBtn_ClickObjectRoutedEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("_newQuestionBtn_Click", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.SecurityQuesitonView, object, pc::System.Windows.RoutedEventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView), base.Instance, 
                     "_newQuestionBtn_Click", typeof(object), typeof(pc::System.Windows.RoutedEventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Settings"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Settings))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Settings")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MSettings
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MSettings()
        : base(typeof(dvl::DigitalVoterList.Settings))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Moles.MSettings.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Moles.MSettings.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Settings), value);
            }
        }
    }
}
namespace Global.Moles
{
    /// <summary>Mole type of <see cref="T:SystemActions"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::SystemActions))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = SystemActions")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MSystemActions
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MSystemActions()
        : base(typeof(dvl::SystemActions))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Global.Moles.MSystemActions.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Global.Moles.MSystemActions.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::SystemActions), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:SystemActions.getSystemAction(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.SystemAction> getSystemActionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("getSystemAction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::SystemActions), "getSystemAction", typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.User"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.User))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = User")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUser
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.User>
    {
        /// <summary>Initializes a new mole</summary>
        public MUser()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUser(dvl::DigitalVoterList.Election.User instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ChangePassword(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> ChangePasswordString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "ChangePassword", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ChangePassword(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string, string> ChangePasswordStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, 
                         "ChangePassword", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.DBId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, int> DBIdGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DBId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_DBId");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.DBId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, int> DBIdSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DBId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "set_DBId", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.FetchPermissions(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string, string, bool> FetchPermissionsStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FetchPermissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, 
                         "FetchPermissions", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.HasPermission(DigitalVoterList.Election.SystemAction)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.SystemAction, bool> HasPermissionSystemAction
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasPermission", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), 
                         (object)null, "HasPermission", typeof(dvl::DigitalVoterList.Election.SystemAction));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.HashPassword(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string, string> HashPasswordString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HashPassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "HashPassword", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Permissions"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> PermissionsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Permissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Permissions");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Title"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string> TitleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Title", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Title");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Title"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> TitleSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Title", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "set_Title", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.UserSalt"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string> UserSaltGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UserSalt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_UserSalt");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.UserSalt"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> UserSaltSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UserSalt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "set_UserSalt", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Username"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, string> UsernameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Username");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Username"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> UsernameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "set_Username", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Valid"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, bool> ValidGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Valid");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Valid"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, bool> ValidSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "set_Valid", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Validated"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, bool> ValidatedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Validated", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Validated");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Workplaces"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> WorkplacesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Workplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, "get_Workplaces");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.WorksHere(DigitalVoterList.Election.VotingVenue)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.VotingVenue, bool> WorksHereVotingVenue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WorksHere", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), 
                         (object)null, "WorksHere", typeof(dvl::DigitalVoterList.Election.VotingVenue));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MUser.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MUser.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.User), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ChangePassword(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ChangePasswordString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "ChangePassword", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ChangePassword(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> ChangePasswordStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangePassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.User), base.Instance, "ChangePassword", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.#ctor(System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, int> ConstructorInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.User), (object)null, ".ctor", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.DBId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> DBIdGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DBId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_DBId");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.DBId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> DBIdSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DBId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "set_DBId", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.FetchPermissions(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> FetchPermissionsStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FetchPermissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string, string, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.User), base.Instance, "FetchPermissions", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.HasPermission(DigitalVoterList.Election.SystemAction)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.SystemAction, bool> HasPermissionSystemAction
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasPermission", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.SystemAction, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "HasPermission", typeof(dvl::DigitalVoterList.Election.SystemAction));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.HashPassword(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> HashPasswordString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HashPassword", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string, string>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.User), base.Instance, "HashPassword", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Permissions"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> PermissionsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Permissions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>>(value)
                                              ), typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Permissions");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Title"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TitleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Title", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Title");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Title"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> TitleSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Title", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "set_Title", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.UserSalt"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UserSaltGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UserSalt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_UserSalt");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.UserSalt"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UserSaltSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UserSalt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "set_UserSalt", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Username"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UsernameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Username");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Username"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UsernameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Username", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, string>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "set_Username", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Valid"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ValidGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Valid");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Valid"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> ValidSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "set_Valid", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Validated"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ValidatedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Validated", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.User, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Validated");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.User.Workplaces"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> WorkplacesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Workplaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "get_Workplaces");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.User.WorksHere(DigitalVoterList.Election.VotingVenue)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, bool> WorksHereVotingVenue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WorksHere", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.User, dvl::DigitalVoterList.Election.VotingVenue, bool>(value)), 
                     typeof(dvl::DigitalVoterList.Election.User), base.Instance, "WorksHere", typeof(dvl::DigitalVoterList.Election.VotingVenue));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.UserWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.UserWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UserWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUserWindow
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.UserWindow>
    {
        /// <summary>Initializes a new mole</summary>
        public MUserWindow()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUserWindow(dvl::DigitalVoterList.Views.UserWindow instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.UserWindow.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.UserWindow> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.UserWindow), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.UserWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.UserWindow, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.UserWindow), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MUserWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MUserWindow.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.UserWindow), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.UserWindow, global::DigitalVoterList.Views.Moles.MUserWindow, pc::System.Windows.IInputElement>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.UserWindow, global::DigitalVoterList.Views.Moles.MUserWindow, pc::System.Windows.Markup.IAddChild>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.UserWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MUserWindow, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind
                                                                 <dvl::DigitalVoterList.Views.UserWindow, global::DigitalVoterList.Views.Moles.MUserWindow, pf::System.Windows.IFrameworkInputElement>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.UserWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MUserWindow, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.UserWindow, 
                                                                  global::DigitalVoterList.Views.Moles.MUserWindow, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MUserWindow Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dvl::DigitalVoterList.Views.UserWindow, global::DigitalVoterList.Views.Moles.MUserWindow, sx::System.Windows.Markup.IQueryAmbient>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.UserWindow.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.UserWindow> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.UserWindow), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.UserWindow.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.UserWindow>(value)), 
                     typeof(dvl::DigitalVoterList.Views.UserWindow), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.UserWindow.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.UserWindow, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.UserWindow), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.VoterCard"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.VoterCard))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VoterCard")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVoterCard
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.VoterCard>
    {
        /// <summary>Initializes a new mole</summary>
        public MVoterCard()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVoterCard(dvl::DigitalVoterList.Election.VoterCard instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Citizen"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.Citizen> CitizenGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Citizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "get_Citizen");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Citizen"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.Citizen> CitizenSetCitizen
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Citizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), 
                         (object)null, "set_Citizen", typeof(dvl::DigitalVoterList.Election.Citizen));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.ElectionEvent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.ElectionEvent> ElectionEventGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ElectionEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "get_ElectionEvent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.ElectionEvent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.ElectionEvent> ElectionEventSetElectionEvent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ElectionEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), 
                         (object)null, "set_ElectionEvent", typeof(dvl::DigitalVoterList.Election.ElectionEvent));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Id"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, int> IdGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "get_Id");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.IdKey"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, string> IdKeyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IdKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "get_IdKey");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.IdKey"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, string> IdKeySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IdKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "set_IdKey", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Id"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, int> IdSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "set_Id", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VoterCard.MarkAsInvalid"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, bool> MarkAsInvalid
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkAsInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "MarkAsInvalid");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Valid"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, bool> ValidGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "get_Valid");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Valid"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, bool> ValidSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, "set_Valid", typeof(bool));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MVoterCard.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MVoterCard.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.VoterCard), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Citizen"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen> CitizenGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Citizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.Citizen>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "get_Citizen");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Citizen"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> CitizenSetCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Citizen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.Citizen>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "set_Citizen", typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VoterCard.#ctor(DigitalVoterList.Election.ElectionEvent,DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.ElectionEvent, dvl::DigitalVoterList.Election.Citizen> ConstructorElectionEventCitizen
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VoterCard), (object)null, 
                     ".ctor", typeof(dvl::DigitalVoterList.Election.ElectionEvent), typeof(dvl::DigitalVoterList.Election.Citizen));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.ElectionEvent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.ElectionEvent> ElectionEventGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ElectionEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.ElectionEvent>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "get_ElectionEvent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.ElectionEvent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.ElectionEvent> ElectionEventSetElectionEvent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ElectionEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.VoterCard, dvl::DigitalVoterList.Election.ElectionEvent>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), 
                     base.Instance, "set_ElectionEvent", typeof(dvl::DigitalVoterList.Election.ElectionEvent));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Id"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> IdGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "get_Id");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.IdKey"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> IdKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IdKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "get_IdKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.IdKey"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> IdKeySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IdKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "set_IdKey", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Id"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> IdSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, int>(value)), 
                     typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "set_Id", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VoterCard.MarkAsInvalid"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MarkAsInvalid
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkAsInvalid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "MarkAsInvalid");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Valid"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ValidGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, bool>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "get_Valid");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VoterCard.Valid"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> ValidSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Valid", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VoterCard, bool>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.VoterCard), base.Instance, "set_Valid", typeof(bool));
            }
        }
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.Administration.VoterCardPrinter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VoterCardPrinter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVoterCardPrinter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter>
    {
        /// <summary>Initializes a new mole</summary>
        public MVoterCardPrinter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVoterCardPrinter(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Administration.VoterCardPrinter.Print(DigitalVoterList.Election.VoterCard)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, dvl::DigitalVoterList.Election.VoterCard> PrintVoterCard
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Print", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter), 
                         (object)null, "Print", typeof(dvl::DigitalVoterList.Election.VoterCard));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, 
                                                                  global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, 
                                                                  global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, 
                                                                  global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, 
                                                                  global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, 
                                                                  global::DigitalVoterList.Election.Administration.Moles.MVoterCardPrinter, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Administration.VoterCardPrinter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.Administration.VoterCardPrinter.Print(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> PrintVoterCard
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Print", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Election.Administration.VoterCardPrinter, dvl::DigitalVoterList.Election.VoterCard>(value)), 
                     typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter), 
                     base.Instance, "Print", typeof(dvl::DigitalVoterList.Election.VoterCard));
            }
        }
    }
}
namespace DigitalVoterList.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.VoterListApp"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.VoterListApp))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VoterListApp")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVoterListApp
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.VoterListApp>
    {
        /// <summary>Initializes a new mole</summary>
        public MVoterListApp()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVoterListApp(dvl::DigitalVoterList.VoterListApp instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Moles.MVoterListApp.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Moles.MVoterListApp.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.VoterListApp), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.VoterListApp.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.VoterListApp> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.VoterListApp.CurrentUser"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User> CurrentUserGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CurrentUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), "get_CurrentUser");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.VoterListApp.CurrentUser"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> CurrentUserSetUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CurrentUser", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), 
                     "set_CurrentUser", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.VoterListApp.Main"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action Main
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Main", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), "Main");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.VoterListApp.RunApp(DigitalVoterList.Election.User)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> RunAppUser
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RunApp", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), "RunApp", typeof(dvl::DigitalVoterList.Election.User));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.VoterListApp.&lt;Main&gt;b__0(System.Object,System.Windows.StartupEventArgs)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, pf::System.Windows.StartupEventArgs> _Mainb__0ObjectStartupEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<Main>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.VoterListApp), 
                     "<Main>b__0", typeof(object), typeof(pf::System.Windows.StartupEventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Controllers.VoterRegistrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VoterRegistrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVoterRegistrationController
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Controllers.VoterRegistrationController>
    {
        /// <summary>Initializes a new mole</summary>
        public MVoterRegistrationController()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVoterRegistrationController(dvl::DigitalVoterList.Controllers.VoterRegistrationController instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.CheckCpr(System.Object,System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs> CheckCprObjectEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckCpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), (object)null, 
                         "CheckCpr", typeof(object), typeof(global::System.EventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.LoadData"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.VoterRegistrationController> LoadData
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), (object)null, "LoadData");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.RegisterVoter(System.Object,System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs> RegisterVoterObjectEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RegisterVoter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), (object)null, 
                         "RegisterVoter", typeof(object), typeof(global::System.EventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.VoterCardNumberChanged(System.Object,System.EventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs> VoterCardNumberChangedObjectEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VoterCardNumberChanged", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), (object)null, 
                         "VoterCardNumberChanged", typeof(object), typeof(global::System.EventArgs));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Controllers.Moles.MVoterRegistrationController.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Controllers.Moles.MVoterRegistrationController.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.CheckCpr(System.Object,System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.EventArgs> CheckCprObjectEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckCpr", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), base.Instance, 
                     "CheckCpr", typeof(object), typeof(global::System.EventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.#ctor(DigitalVoterList.Views.VoterRegistrationView)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Controllers.VoterRegistrationController, dvl::DigitalVoterList.Views.VoterRegistrationView> ConstructorVoterRegistrationView
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), 
                     (object)null, ".ctor", typeof(dvl::DigitalVoterList.Views.VoterRegistrationView));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.LoadData"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action LoadData
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Controllers.VoterRegistrationController>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), base.Instance, "LoadData");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.RegisterVoter(System.Object,System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.EventArgs> RegisterVoterObjectEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RegisterVoter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), base.Instance, 
                     "RegisterVoter", typeof(object), typeof(global::System.EventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Controllers.VoterRegistrationController.VoterCardNumberChanged(System.Object,System.EventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.EventArgs> VoterCardNumberChangedObjectEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VoterCardNumberChanged", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Controllers.VoterRegistrationController, object, global::System.EventArgs>(value)), 
                     typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController), base.Instance, 
                     "VoterCardNumberChanged", typeof(object), typeof(global::System.EventArgs));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Views.VoterRegistrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Views.VoterRegistrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VoterRegistrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVoterRegistrationView
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Views.VoterRegistrationView>
    {
        /// <summary>Initializes a new mole</summary>
        public MVoterRegistrationView()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVoterRegistrationView(dvl::DigitalVoterList.Views.VoterRegistrationView instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView.InitializeComponent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.VoterRegistrationView> InitializeComponent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), (object)null, "InitializeComponent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.VoterRegistrationView, int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), (object)null, 
                         "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView._CreateDelegate(System.Type,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Views.VoterRegistrationView, global::System.Type, string, global::System.Delegate> _CreateDelegateTypeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("_CreateDelegate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), (object)null, 
                         "_CreateDelegate", typeof(global::System.Type), typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Views.Moles.MVoterRegistrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Views.Moles.MVoterRegistrationView.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(pc::System.Windows.IInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, pc::System.Windows.IInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(pc::System.Windows.Markup.IAddChild target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, pc::System.Windows.Markup.IAddChild>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(pc::System.Windows.Media.Animation.IAnimatable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, pc::System.Windows.Media.Animation.IAnimatable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(pf::System.Windows.IFrameworkInputElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, pf::System.Windows.IFrameworkInputElement>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(global::System.ComponentModel.ISupportInitialize target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, global::System.ComponentModel.ISupportInitialize>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(sx::System.Windows.Markup.IComponentConnector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, sx::System.Windows.Markup.IComponentConnector>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DigitalVoterList.Views.Moles.MVoterRegistrationView Bind(sx::System.Windows.Markup.IQueryAmbient target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dvl::DigitalVoterList.Views.VoterRegistrationView, 
                                                                  global::DigitalVoterList.Views.Moles.MVoterRegistrationView, sx::System.Windows.Markup.IQueryAmbient>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Views.VoterRegistrationView> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView.InitializeComponent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeComponent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeComponent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.VoterRegistrationView>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), base.Instance, "InitializeComponent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView.System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object> SystemWindowsMarkupIComponentConnectorConnectInt32Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Windows.Markup.IComponentConnector.Connect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Views.VoterRegistrationView, int, object>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), base.Instance, 
                                                                                          "System.Windows.Markup.IComponentConnector.Connect", typeof(int), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Views.VoterRegistrationView._CreateDelegate(System.Type,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, string, global::System.Delegate> _CreateDelegateTypeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("_CreateDelegate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dvl::DigitalVoterList.Views.VoterRegistrationView, global::System.Type, string, global::System.Delegate>(value)), 
                     typeof(dvl::DigitalVoterList.Views.VoterRegistrationView), base.Instance, 
                     "_CreateDelegate", typeof(global::System.Type), typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Mole type of <see cref="T:DigitalVoterList.Election.VotingVenue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dvl::DigitalVoterList.Election.VotingVenue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = VotingVenue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MVotingVenue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dvl::DigitalVoterList.Election.VotingVenue>
    {
        /// <summary>Initializes a new mole</summary>
        public MVotingVenue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MVotingVenue(dvl::DigitalVoterList.Election.VotingVenue instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "get_Address");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Address"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AddressSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, string>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "set_Address", typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, string> AddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "get_Address");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Address"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VotingVenue, string> AddressSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Address", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "set_Address", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.DbId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, int> DbIdGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "get_DbId");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.DbId"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VotingVenue, int> DbIdSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "set_DbId", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VotingVenue, string> NameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, "set_Name", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DigitalVoterList.Election.Moles.MVotingVenue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DigitalVoterList.Election.Moles.MVotingVenue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dvl::DigitalVoterList.Election.VotingVenue), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VotingVenue.#ctor(System.Int32,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VotingVenue, int, string, string> ConstructorInt32StringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), (object)null, 
                     ".ctor", typeof(int), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.DbId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> DbIdGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, int>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "get_DbId");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.DbId"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> DbIdSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DbId", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, int>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "set_DbId", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VotingVenue.op_Equality(DigitalVoterList.Election.VotingVenue,DigitalVoterList.Election.VotingVenue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, dvl::DigitalVoterList.Election.VotingVenue, bool> EqualityOpVotingVenueVotingVenue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("op_Equality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), 
                     "op_Equality", typeof(dvl::DigitalVoterList.Election.VotingVenue), typeof(dvl::DigitalVoterList.Election.VotingVenue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DigitalVoterList.Election.VotingVenue.op_Inequality(DigitalVoterList.Election.VotingVenue,DigitalVoterList.Election.VotingVenue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VotingVenue, dvl::DigitalVoterList.Election.VotingVenue, bool> InequalityOpVotingVenueVotingVenue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("op_Inequality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(dvl::DigitalVoterList.Election.VotingVenue), 
                     "op_Inequality", typeof(dvl::DigitalVoterList.Election.VotingVenue), typeof(dvl::DigitalVoterList.Election.VotingVenue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, string>(value)), 
                                                                                       typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DigitalVoterList.Election.VotingVenue.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dvl::DigitalVoterList.Election.VotingVenue, string>(value)), 
                                                                                          typeof(dvl::DigitalVoterList.Election.VotingVenue), base.Instance, "set_Name", typeof(string));
            }
        }
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.AdministrationWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.AdministrationWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = AdministrationWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SAdministrationWindow
      : dvl::DigitalVoterList.Views.AdministrationWindow
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SAdministrationWindow()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SAdministrationWindow</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Utilities.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Utilities.Barcode"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Utilities.Barcode))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Barcode")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SBarcode
      : dvl::DigitalVoterList.Utilities.Barcode
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SBarcode(string data)
        : base(data)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SBarcode</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.Citizen"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.Citizen))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Citizen")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SCitizen
      : dvl::DigitalVoterList.Election.Citizen
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SCitizen(int id, string cpr)
        : base(id, cpr)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SCitizen</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.ContentController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.ContentController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ContentController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SContentController
      : dvl::DigitalVoterList.Controllers.ContentController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SContentController()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SContentController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.DAOPermissionProxy"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.DAOPermissionProxy))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DAOPermissionProxy")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDAOPermissionProxy
      : dvl::DigitalVoterList.Election.DAOPermissionProxy
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDAOPermissionProxy(dvl::DigitalVoterList.Election.User u, dvl::DigitalVoterList.Election.IDataAccessObject dao)
        : base(u, dao)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SDAOPermissionProxy</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.Administration.DataAnalyzer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.Administration.DataAnalyzer))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DataAnalyzer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDataAnalyzer
      : dvl::DigitalVoterList.Election.Administration.DataAnalyzer
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDataAnalyzer()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SDataAnalyzer</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.Administration.DataCollector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.Administration.DataCollector))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DataCollector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDataCollector
      : dvl::DigitalVoterList.Election.Administration.DataCollector
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDataCollector()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SDataCollector</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.DataTransformer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.DataTransformer))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DataTransformer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDataTransformer
      : dvl::DigitalVoterList.Election.DataTransformer
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDataTransformer()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SDataTransformer</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.ElectionAdministrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.ElectionAdministrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ElectionAdministrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SElectionAdministrationController
      : dvl::DigitalVoterList.Controllers.ElectionAdministrationController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SElectionAdministrationController(dvl::DigitalVoterList.Views.ElectionAdministrationView view)
        : base(view)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SElectionAdministrationController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.ElectionAdministrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.ElectionAdministrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ElectionAdministrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SElectionAdministrationView
      : dvl::DigitalVoterList.Views.ElectionAdministrationView
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SElectionAdministrationView()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SElectionAdministrationView</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.ElectionEvent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.ElectionEvent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ElectionEvent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SElectionEvent
      : dvl::DigitalVoterList.Election.ElectionEvent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SElectionEvent(global::System.DateTime date, string name)
        : base(date, name)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SElectionEvent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.IDataAccessObject"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.IDataAccessObject))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = IDataAccessObject")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SIDataAccessObject
      : mmf::Microsoft.Moles.Framework.Stubs.StubBase
      , dvl::DigitalVoterList.Election.IDataAccessObject
    {
        /// <summary>Initializes a new instance of type SIDataAccessObject</summary>
        public SIDataAccessObject()
        {
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ChangePassword(DigitalVoterList.Election.User,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> ChangePasswordUserString;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ChangePassword(DigitalVoterList.Election.User,System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string, string> ChangePasswordUserStringString;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ChangePassword(DigitalVoterList.Election.User,System.String)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.ChangePassword(dvl::DigitalVoterList.Election.User user, string newPasswordHash)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string> sh = this.ChangePasswordUserString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string>)null)
              sh.Invoke(user, newPasswordHash);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.ChangePassword");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ChangePassword(DigitalVoterList.Election.User,System.String,System.String)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.ChangePassword(
            dvl::DigitalVoterList.Election.User user,
            string newPasswordHash,
            string oldPasswordHash
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string, string> sh
               = this.ChangePasswordUserStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User, string, string>)null)
              sh.Invoke(user, newPasswordHash, oldPasswordHash);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.ChangePassword");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.Person)"/>
        /// </summary>
        global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person> dvl::DigitalVoterList.Election.IDataAccessObject.Find(dvl::DigitalVoterList.Election.Person person)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>> sh
               = this.FindPerson;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>>)null)
              return sh.Invoke(person);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>>
                         (this, "DigitalVoterList.Election.IDataAccessObject.Find");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.User)"/>
        /// </summary>
        global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User> dvl::DigitalVoterList.Election.IDataAccessObject.Find(dvl::DigitalVoterList.Election.User user)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>> sh = this.FindUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>>)null)
              return sh.Invoke(user);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>>(this, "DigitalVoterList.Election.IDataAccessObject.Find");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard> dvl::DigitalVoterList.Election.IDataAccessObject.Find(dvl::DigitalVoterList.Election.VoterCard voterCard)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, 
                                                               global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>> sh = this.FindVoterCard;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, 
                                                                          global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>>)null)
              return sh.Invoke(voterCard);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>>
                         (this, "DigitalVoterList.Election.IDataAccessObject.Find");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.FindElegibleVoters"/>
        /// </summary>
        global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen> dvl::DigitalVoterList.Election.IDataAccessObject.FindElegibleVoters()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>> sh
               = this.FindElegibleVoters;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>>)
                    null)
              return sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>>
                         (this, "DigitalVoterList.Election.IDataAccessObject.FindElegibleVoters");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.FindVotingVenue(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.VotingVenue dvl::DigitalVoterList.Election.IDataAccessObject.FindVotingVenue(dvl::DigitalVoterList.Election.Citizen citizen)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> sh
               = this.FindVotingVenueCitizen;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue>)
                    null)
              return sh.Invoke(citizen);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.VotingVenue>
                         (this, "DigitalVoterList.Election.IDataAccessObject.FindVotingVenue");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.GetPermissions(DigitalVoterList.Election.User)"/>
        /// </summary>
        global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction> dvl::DigitalVoterList.Election.IDataAccessObject.GetPermissions(dvl::DigitalVoterList.Election.User u)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, 
                                                               global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> sh = this.GetPermissionsUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, 
                                                                          global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>>)null)
              return sh.Invoke(u);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>>
                         (this, "DigitalVoterList.Election.IDataAccessObject.GetPermissions");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.GetWorkplaces(DigitalVoterList.Election.User)"/>
        /// </summary>
        global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue> dvl::DigitalVoterList.Election.IDataAccessObject.GetWorkplaces(dvl::DigitalVoterList.Election.User u)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, 
                                                               global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> sh = this.GetWorkplacesUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, 
                                                                          global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>>)null)
              return sh.Invoke(u);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, 
                                      global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>>
                         (this, "DigitalVoterList.Election.IDataAccessObject.GetWorkplaces");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadPerson(System.Int32)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.Person dvl::DigitalVoterList.Election.IDataAccessObject.LoadPerson(int id)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.Person> sh = this.LoadPersonInt32;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.Person>)null)
              return sh.Invoke(id);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.Person>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadPerson");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.String)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.User dvl::DigitalVoterList.Election.IDataAccessObject.LoadUser(string username)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.User> sh = this.LoadUserString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.User>)null)
              return sh.Invoke(username);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.User>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadUser");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.Int32)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.User dvl::DigitalVoterList.Election.IDataAccessObject.LoadUser(int id)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.User> sh = this.LoadUserInt32;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.User>)null)
              return sh.Invoke(id);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.User>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadUser");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.String,System.String)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.User dvl::DigitalVoterList.Election.IDataAccessObject.LoadUser(string username, string password)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, dvl::DigitalVoterList.Election.User> sh = this.LoadUserStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, dvl::DigitalVoterList.Election.User>)null)
              return sh.Invoke(username, password);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.User>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadUser");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(System.String)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.VoterCard dvl::DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(string idKey)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.VoterCard> sh = this.LoadVoterCardString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.VoterCard>)null)
              return sh.Invoke(idKey);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.VoterCard>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadVoterCard");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(System.Int32)"/>
        /// </summary>
        dvl::DigitalVoterList.Election.VoterCard dvl::DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(int id)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.VoterCard> sh = this.LoadVoterCardInt32;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.VoterCard>)null)
              return sh.Invoke(id);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, dvl::DigitalVoterList.Election.VoterCard>
                         (this, "DigitalVoterList.Election.IDataAccessObject.LoadVoterCard");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkPeopleNotInRawDataUneligibleToVote"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.MarkPeopleNotInRawDataUneligibleToVote()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.MarkPeopleNotInRawDataUneligibleToVote;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.MarkPeopleNotInRawDataUneligibleToVote");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkUserInvalid(DigitalVoterList.Election.User)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.MarkUserInvalid(dvl::DigitalVoterList.Election.User user)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> sh = this.MarkUserInvalidUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User>)null)
              sh.Invoke(user);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.MarkUserInvalid");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkVoterCardInvalid(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.MarkVoterCardInvalid(dvl::DigitalVoterList.Election.VoterCard voterCard)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> sh = this.MarkVoterCardInvalidVoterCard;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard>)null)
              sh.Invoke(voterCard);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.MarkVoterCardInvalid");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.RestoreUser(DigitalVoterList.Election.User)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.RestoreUser(dvl::DigitalVoterList.Election.User user)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> sh = this.RestoreUserUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User>)null)
              sh.Invoke(user);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.RestoreUser");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.Person)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.Save(dvl::DigitalVoterList.Election.Person person)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person> sh = this.SavePerson;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person>)null)
              sh.Invoke(person);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>(this, "DigitalVoterList.Election.IDataAccessObject.Save");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.User)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.Save(dvl::DigitalVoterList.Election.User user)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> sh = this.SaveUser;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User>)null)
              sh.Invoke(user);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>(this, "DigitalVoterList.Election.IDataAccessObject.Save");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.Save(dvl::DigitalVoterList.Election.VoterCard voterCard)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> sh = this.SaveVoterCard;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard>)null)
              sh.Invoke(voterCard);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>(this, "DigitalVoterList.Election.IDataAccessObject.Save");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.SetHasVoted(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.SetHasVoted(dvl::DigitalVoterList.Election.Citizen citizen)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> sh = this.SetHasVotedCitizen;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen>)null)
              sh.Invoke(citizen);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.SetHasVoted");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.SetHasVoted(DigitalVoterList.Election.Citizen,System.Int32)"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.SetHasVoted(dvl::DigitalVoterList.Election.Citizen citizen, int cprKey)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, int> sh = this.SetHasVotedCitizenInt32;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, int>)null)
              sh.Invoke(citizen, cprKey);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.SetHasVoted");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.UpdatePeople(System.Func`3{DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson,DigitalVoterList.Election.Person})"/>
        /// </summary>
        void dvl::DigitalVoterList.Election.IDataAccessObject.UpdatePeople(global::System.Func<dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person> update)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Func<dvl::DigitalVoterList.Election.Person, 
                                                                                     dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>> sh = this.UpdatePeopleFuncOfPersonRawPersonPerson;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Func<dvl::DigitalVoterList.Election.Person, 
                                                                                                dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>>)null)
              sh.Invoke(update);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::DigitalVoterList.Election.Moles.SIDataAccessObject>
                  (this, "DigitalVoterList.Election.IDataAccessObject.UpdatePeople");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ValidateUser(System.String,System.String)"/>
        /// </summary>
        bool dvl::DigitalVoterList.Election.IDataAccessObject.ValidateUser(string username, string passwordHash)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> sh = this.ValidateUserStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool>)null)
              return sh.Invoke(username, passwordHash);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::DigitalVoterList.Election.Moles.SIDataAccessObject, bool>
                         (this, "DigitalVoterList.Election.IDataAccessObject.ValidateUser");
            }
        }

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.FindElegibleVoters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Citizen>> FindElegibleVoters;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.Person)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Person, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.Person>> FindPerson;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.User>> FindUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Find(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.VoterCard, global::System.Collections.Generic.List<dvl::DigitalVoterList.Election.VoterCard>> FindVoterCard;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.FindVotingVenue(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.Citizen, dvl::DigitalVoterList.Election.VotingVenue> FindVotingVenueCitizen;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.GetPermissions(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.SystemAction>> GetPermissionsUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.GetWorkplaces(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dvl::DigitalVoterList.Election.User, global::System.Collections.Generic.HashSet<dvl::DigitalVoterList.Election.VotingVenue>> GetWorkplacesUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadPerson(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.Person> LoadPersonInt32;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.User> LoadUserInt32;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.User> LoadUserString;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadUser(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, dvl::DigitalVoterList.Election.User> LoadUserStringString;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardInt32;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.LoadVoterCard(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, dvl::DigitalVoterList.Election.VoterCard> LoadVoterCardString;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkPeopleNotInRawDataUneligibleToVote"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action MarkPeopleNotInRawDataUneligibleToVote;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkUserInvalid(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> MarkUserInvalidUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.MarkVoterCardInvalid(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> MarkVoterCardInvalidVoterCard;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.RestoreUser(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> RestoreUserUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.Person)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Person> SavePerson;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.User)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.User> SaveUser;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.Save(DigitalVoterList.Election.VoterCard)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.VoterCard> SaveVoterCard;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.SetHasVoted(DigitalVoterList.Election.Citizen)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen> SetHasVotedCitizen;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.SetHasVoted(DigitalVoterList.Election.Citizen,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dvl::DigitalVoterList.Election.Citizen, int> SetHasVotedCitizenInt32;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.UpdatePeople(System.Func`3{DigitalVoterList.Election.Person,DigitalVoterList.Election.RawPerson,DigitalVoterList.Election.Person})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Func<dvl::DigitalVoterList.Election.Person, dvl::DigitalVoterList.Election.RawPerson, dvl::DigitalVoterList.Election.Person>> UpdatePeopleFuncOfPersonRawPersonPerson;

        /// <summary>Sets the stub of <see cref="M:DigitalVoterList.Election.IDataAccessObject.ValidateUser(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> ValidateUserStringString;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.LoginController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.LoginController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = LoginController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SLoginController
      : dvl::DigitalVoterList.Controllers.LoginController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SLoginController(dvl::DigitalVoterList.Views.LoginWindow view)
        : base(view)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SLoginController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.LoginEventArgs"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.LoginEventArgs))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = LoginEventArgs")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SLoginEventArgs
      : dvl::DigitalVoterList.Views.LoginEventArgs
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SLoginEventArgs(string username, string password)
        : base(username, password)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SLoginEventArgs</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.LoginWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.LoginWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = LoginWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SLoginWindow
      : dvl::DigitalVoterList.Views.LoginWindow
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SLoginWindow()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SLoginWindow</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.MainWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.MainWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MainWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMainWindow
      : dvl::DigitalVoterList.Views.MainWindow
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMainWindow()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMainWindow</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.MainWindowController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.MainWindowController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MainWindowController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMainWindowController
      : dvl::DigitalVoterList.Controllers.MainWindowController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMainWindowController(dvl::DigitalVoterList.Views.MainWindow view)
        : base(view)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMainWindowController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.ManualRegistrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.ManualRegistrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ManualRegistrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SManualRegistrationController
      : dvl::DigitalVoterList.Controllers.ManualRegistrationController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SManualRegistrationController(dvl::DigitalVoterList.Views.ManualRegistrationView view)
        : base(view)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SManualRegistrationController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.ManualRegistrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.ManualRegistrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ManualRegistrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SManualRegistrationView
      : dvl::DigitalVoterList.Views.ManualRegistrationView
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SManualRegistrationView()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SManualRegistrationView</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.PermissionException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.PermissionException))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = PermissionException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SPermissionException
      : dvl::DigitalVoterList.Election.PermissionException
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SPermissionException(
            dvl::DigitalVoterList.Election.SystemAction systemAction,
            dvl::DigitalVoterList.Election.User user,
            string msg
        )
        : base(systemAction, user, msg)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SPermissionException</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.Person"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.Person))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Person")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SPerson
      : dvl::DigitalVoterList.Election.Person
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SPerson()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SPerson(int id)
        : base(id)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SPerson</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Utilities.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Utilities.Quiz"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Utilities.Quiz))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Quiz")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SQuiz
      : dvl::DigitalVoterList.Utilities.Quiz
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SQuiz(string question, string answer)
        : base(question, answer)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SQuiz</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.RandomQuestionController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.RandomQuestionController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RandomQuestionController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRandomQuestionController
      : dvl::DigitalVoterList.Controllers.RandomQuestionController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRandomQuestionController(dvl::DigitalVoterList.Views.SecurityQuesitonView view, dvl::DigitalVoterList.Election.Citizen voter)
        : base(view, voter)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SRandomQuestionController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.RawPerson"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.RawPerson))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RawPerson")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRawPerson
      : dvl::DigitalVoterList.Election.RawPerson
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRawPerson()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SRawPerson</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.SecurityQuesitonView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.SecurityQuesitonView))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = SecurityQuesitonView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SSecurityQuesitonView
      : dvl::DigitalVoterList.Views.SecurityQuesitonView
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SSecurityQuesitonView()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SSecurityQuesitonView</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.User"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.User))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = User")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUser
      : dvl::DigitalVoterList.Election.User
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUser()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SUser(int id)
        : base(id)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SUser</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.UserWindow"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.UserWindow))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = UserWindow")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUserWindow
      : dvl::DigitalVoterList.Views.UserWindow
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUserWindow()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SUserWindow</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.VoterCard"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.VoterCard))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VoterCard")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVoterCard
      : dvl::DigitalVoterList.Election.VoterCard
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVoterCard(dvl::DigitalVoterList.Election.ElectionEvent electionEvent, dvl::DigitalVoterList.Election.Citizen citizen)
        : base(electionEvent, citizen)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVoterCard</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Administration.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.Administration.VoterCardPrinter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.Administration.VoterCardPrinter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VoterCardPrinter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVoterCardPrinter
      : dvl::DigitalVoterList.Election.Administration.VoterCardPrinter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVoterCardPrinter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVoterCardPrinter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.VoterListApp"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.VoterListApp))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VoterListApp")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVoterListApp
      : dvl::DigitalVoterList.VoterListApp
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVoterListApp()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVoterListApp</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Controllers.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Controllers.VoterRegistrationController"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Controllers.VoterRegistrationController))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VoterRegistrationController")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVoterRegistrationController
      : dvl::DigitalVoterList.Controllers.VoterRegistrationController
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVoterRegistrationController(dvl::DigitalVoterList.Views.VoterRegistrationView view)
        : base(view)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVoterRegistrationController</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Views.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Views.VoterRegistrationView"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Views.VoterRegistrationView))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VoterRegistrationView")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVoterRegistrationView
      : dvl::DigitalVoterList.Views.VoterRegistrationView
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVoterRegistrationView()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVoterRegistrationView</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DigitalVoterList.Election.Moles
{
    /// <summary>Stub type of <see cref="T:DigitalVoterList.Election.VotingVenue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dvl::DigitalVoterList.Election.VotingVenue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = VotingVenue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SVotingVenue
      : dvl::DigitalVoterList.Election.VotingVenue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SVotingVenue(
            int dbid,
            string name,
            string address
        )
        : base(dbid, name, address)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SVotingVenue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
