// <copyright file="RandomQuestionControllerTest.Constructor.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using DigitalVoterList.Utilities;
using System.Collections.Generic;
using DigitalVoterList.Election;
using DigitalVoterList.Views;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace DigitalVoterList.Controllers
{
    public partial class RandomQuestionControllerTest
    {
[TestMethod]
[PexGeneratedBy(typeof(RandomQuestionControllerTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Constructor04()
{
    HashSet<Quiz> hashSet;
    Citizen citizen;
    RandomQuestionController randomQuestionController;
    Quiz[] quizs = new Quiz[14592];
    Quiz s0 = new Quiz((string)null, (string)null);
    quizs[0] = s0;
    quizs[2] = s0;
    quizs[3] = s0;
    hashSet = new HashSet<Quiz>((IEnumerable<Quiz>)quizs);
    citizen = new Citizen(0, (string)null);
    citizen.EligibleToVote = false;
    citizen.VotingPlace = (VotingVenue)null;
    citizen.VoterCards = (HashSet<VoterCard>)null;
    citizen.SecurityQuestions = hashSet;
    ((Person)citizen).PassportNumber = (string)null;
    citizen.SetHasVoted();
    randomQuestionController = this.Constructor((SecurityQuesitonView)null, citizen);
}
[TestMethod]
[PexGeneratedBy(typeof(RandomQuestionControllerTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Constructor03()
{
    HashSet<Quiz> hashSet;
    Citizen citizen;
    RandomQuestionController randomQuestionController;
    Quiz[] quizs = new Quiz[14848];
    Quiz s0 = new Quiz((string)null, (string)null);
    quizs[0] = s0;
    quizs[1] = s0;
    hashSet = new HashSet<Quiz>((IEnumerable<Quiz>)quizs);
    citizen = new Citizen(0, (string)null);
    citizen.EligibleToVote = false;
    citizen.VotingPlace = (VotingVenue)null;
    citizen.VoterCards = (HashSet<VoterCard>)null;
    citizen.SecurityQuestions = hashSet;
    ((Person)citizen).PassportNumber = (string)null;
    citizen.SetHasVoted();
    randomQuestionController = this.Constructor((SecurityQuesitonView)null, citizen);
}
[TestMethod]
[PexGeneratedBy(typeof(RandomQuestionControllerTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Constructor02()
{
    HashSet<Quiz> hashSet;
    Citizen citizen;
    RandomQuestionController randomQuestionController;
    Quiz[] quizs = new Quiz[14592];
    Quiz s0 = new Quiz((string)null, (string)null);
    quizs[0] = s0;
    hashSet = new HashSet<Quiz>((IEnumerable<Quiz>)quizs);
    citizen = new Citizen(0, (string)null);
    citizen.EligibleToVote = false;
    citizen.VotingPlace = (VotingVenue)null;
    citizen.VoterCards = (HashSet<VoterCard>)null;
    citizen.SecurityQuestions = hashSet;
    ((Person)citizen).PassportNumber = (string)null;
    citizen.SetHasVoted();
    randomQuestionController = this.Constructor((SecurityQuesitonView)null, citizen);
}
[TestMethod]
[PexGeneratedBy(typeof(RandomQuestionControllerTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void Constructor01()
{
    HashSet<Quiz> hashSet;
    Citizen citizen;
    RandomQuestionController randomQuestionController;
    Quiz[] quizs = new Quiz[15360];
    hashSet = new HashSet<Quiz>((IEnumerable<Quiz>)quizs);
    citizen = new Citizen(0, (string)null);
    citizen.EligibleToVote = false;
    citizen.VotingPlace = (VotingVenue)null;
    citizen.VoterCards = (HashSet<VoterCard>)null;
    citizen.SecurityQuestions = hashSet;
    ((Person)citizen).PassportNumber = (string)null;
    citizen.SetHasVoted();
    randomQuestionController = this.Constructor((SecurityQuesitonView)null, citizen);
}
[TestMethod]
[PexGeneratedBy(typeof(RandomQuestionControllerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void ConstructorThrowsNullReferenceException122()
{
    RandomQuestionController randomQuestionController;
    randomQuestionController =
      this.Constructor((SecurityQuesitonView)null, (Citizen)null);
}
    }
}
